<?php

$finder = PhpCsFixer\Finder::create()
  ->in(__DIR__.'/src/PHPFUI/InstaDoc')
;

return PhpCsFixer\Config::create()
  ->setIndent("\t")
  ->setLineEnding("\r\n")
  ->setRules([
		'array_indentation' => true,
		'array_syntax' => ['syntax' => 'short'],
		'binary_operator_spaces' => true,
		'blank_line_after_namespace' => true,
		'blank_line_after_opening_tag' => true,
		'blank_line_before_statement' => ['statements' => ['break', 'case', 'continue', 'declare', 'default', 'die', 'do', 'exit', 'for', 'foreach', 'goto', 'if', 'return', 'switch', 'throw', 'try', 'while', 'yield']],
		'class_attributes_separation' => true,
		'combine_consecutive_issets' => true,
		'combine_consecutive_unsets' => true,
		'combine_nested_dirname' => true,
		'compact_nullable_typehint' => true,
		'concat_space' => ['spacing' => 'one'],
		'constant_case' => true,
		'declare_equal_normalize' => ['space' => 'single'],
		'dir_constant' => true,
		'elseif' => true,
		'ereg_to_preg' => true,
		'explicit_indirect_variable' => true,
		'explicit_string_variable' => true,
		'full_opening_tag' => true,
		'function_typehint_space' => true,
		'is_null' => true,
		'linebreak_after_opening_tag' => true,
		'list_syntax' => ['syntax' => 'short'],
		'logical_operators' => true,
		'lowercase_cast' => true,
		'lowercase_constants' => true,
		'lowercase_keywords' => true,
		'lowercase_static_reference' => true,
		'magic_constant_casing' => true,
		'magic_method_casing' => true,
		'method_chaining_indentation' => true,
		'modernize_types_casting' => true,
		'native_function_casing' => true,
		'native_function_invocation' => [],
		'new_with_braces' => true,
		'no_alias_functions' => ['sets' => ['@all']],
		'no_alternative_syntax' => true,
		'no_blank_lines_after_phpdoc' => true,
		'no_break_comment' => ['comment_text' => 'Intentionally fall through'],
		'no_closing_tag' => true,
		'no_empty_comment' => true,
		'no_empty_statement' => true,
		'no_leading_namespace_whitespace' => true,
		'no_spaces_inside_parenthesis' => true,
		'no_superfluous_phpdoc_tags' => true,
		'no_trailing_whitespace' => true,
		'no_trailing_whitespace_in_comment' => true,
		'no_unneeded_control_parentheses' => true,
		'no_unneeded_final_method' => true,
		'no_unreachable_default_argument_value' => true,
		'no_unset_cast' => true,
		'no_useless_return' => true,
		'no_whitespace_before_comma_in_array' => true,
		'no_whitespace_in_blank_line' => true,
		'non_printable_character' => ['use_escape_sequences_in_strings' => true],
		'normalize_index_brace' => true,
		'not_operator_with_successor_space' => true,
		'ordered_class_elements' => true,
		'protected_to_private' => true,
		'psr_autoloading' => true,
		'return_type_declaration' => ['space_before' => 'one',],
		'semicolon_after_instruction' => true,
		'set_type_to_cast' => true,
		'short_scalar_cast' => true,
		'simple_to_complex_string_variable' => true,
		'simple_to_complex_string_variable' => true,
		'simplified_if_return' => true,
		'simplified_null_return' => true,
		'simplified_null_return' => true,
		'single_blank_line_at_eof' => true,
		'single_blank_line_at_eof' => true,
		'single_blank_line_before_namespace' => true,
		'single_class_element_per_statement' => true,
		'single_import_per_statement' => true,
		'single_line_after_imports' => true,
		'single_line_comment_style' => true,
		'single_quote' => true,
		'single_trait_insert_per_statement' => true,
		'standardize_not_equals' => true,
		'static_lambda' => true,
		'string_line_ending' => true,
		'switch_case_semicolon_to_colon' => true,
		'switch_case_space' => true,
		'switch_continue_to_break' => true,
		'ternary_operator_spaces' => true,
		'ternary_to_elvis_operator' => true,
		'ternary_to_null_coalescing' => true,
		'trailing_comma_in_multiline_array' => true,
		'trim_array_spaces' => true,
		'unary_operator_spaces' => true,
		'visibility_required' => ['property', 'method', 'const', ],
		'void_return' => true,
		'whitespace_after_comma_in_array' => true,
		'yoda_style' => true,
//    'braces' => ['position_after_control_structures' => 'next', 'position_after_functions_and_oop_constructs' => 'next', 'position_after_anonymous_constructs' => 'next',],
//    'no_unneeded_curly_braces' => true,
    ])
  ->setFinder($finder)
;

